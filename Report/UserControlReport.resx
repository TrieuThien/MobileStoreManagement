<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="buttonPrintReport.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAAIGNIUk0AAHomAACAhAAA+gAAAIDoAAB1
        MAAA6mAAADqYAAAXcJy6UTwAAAAJcEhZcwAADdQAAA3UAe+RuhUAAAAHdElNRQfpBBUAMAHHmefiAAAA
        GXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAABSJJREFUSEu9129ME3ccx/Ez48Ge+cR1
        Yqdx1Bni5qbbRCkFqX/ik7nMjVoh1S1LNjXLZoiJSzbn5owOKsoEhhQR5Z94BYQCghXCAFEmKCJUS68H
        KPRahn+uoNmE1n6WX4HSqxQEzS55pdAHfff36933WoryOjiOI2ZxHJfCcRwmY7FYwDAMOhgzLI15/NMT
        wUpH5jLKpZG4TesYDQdwHFfqG/I1HmbBNWTAlf5Wj0sj+WgsPK24V1jnG/IlDJ8kYbg0EotLI9n43HGl
        QuXW0nKDevDgwYuEPXFnmoTK+3Y5FbJyDSWTygUEUeKbnbuo3Jz8Vy0WyzS3WhB2x51pko0UFfXKsg/X
        BsikckIY9wovVCpUh2K2fK5ruHTZZrPZnon5D2eMBoM8HMeD+hK/fL9MuipSJ5PKi2VS+SGZVL7QNzxb
        qVCVKxUqRCu3Qa+vwvOHzbjbrMOTnEgMn1qB4dMhbo7TIehNkSI2Zj3CpHLIRpTLpPLZ3uEwpUL1eCx8
        cRphk8kEU4cRnW2X0dVaK9DTXg9tVjoiZGvHwo9lUnmYd3iDUqEamnHYjYGJMQuY2U7QdCFWh68bCw/J
        pPIN7vBnMV9RMZsU67dERQ9tiYpBzGYVqvUXca/Phj4r55eN60UXy4BlOvzq7jSjgKaxOkwOWWgEwkMj
        hiJCVq0PjfyYoiiAWnGweHv4DyedYT+eQvhPWYgtbYe6+R7irvZPrKkfvzX2Y3/l3/il3L/9Ff34Or0V
        73yRhiXbjuPtrSnOxTuKdpAmJab578Q0f0+stWOedsAtkLYj8CzvH81jbu4A5iQ4MCfOObn4pxCpXePi
        nfdFamcsCfeJaR5j5nnxft7XvLwBvH5kmLzQTPSTsOfF5mt5LDlnx9JzdiwqtD8Te4lheMJzz/KIrnqE
        OvMQGtkhZN/8F8FFdr8rf2lh8tl9oh9Eye0nqDQ+QdK1f7C48H8Ij7DjzcJBSIoGsaBwcPRkI48+CgYQ
        mP8IoqMuvKbGcxGRk2zisB0Ls3uxNLEe7x6pwXtTWKquwaLdNQjaVQPJFIJi6xH4631B3BMmq/sg7jyU
        m7dic5QKiil8uika4bJ1kIbKJxUWSibWGizeqRtdue+KtXZIMlmsPFiMA5qzOJNzBrmTyM7KRXJSKo79
        nuxX8rFkxB7QIHi7FuKfeydesXvVtB3zCwZA3+p3j0wyrwmr1QqOG0f+H5nVZq9ZPYLMb5ZlwbJm98g8
        dcmKwAQyOPx+xiMWaHnkt/e55zG5GXR3daOutgFVVX+i2qMWFyqrkX06H5kZOcjMyB2Vg7wcLVpvtI68
        AaYDJ+ssCFQ7pjqrhWGrlUMn24mL+hqUl+tx3ouu5DzSUjORkpSOP5JOuJG/T2iycP1ay4uFx26BPT09
        uHPnrkBXVzcMBgPa2toFDIZbnm2fKtw/WdjSa0FHhwkGw23c8tLWZkDDpSuor2vwqKtrwJUrf8FoNE4V
        vk/Cu8U0/3CiMDmJzAyLstJKnCsqE9DSxUg8korDcUkCSYlpaLraPL7Vtc+EeZHauYeEA8Q0Hymm+T1i
        mt8bVMDvq2NsRpvXNt9ouYmmq9fQ1HTdo7GxCRXlepTpKlBWOkpXAf2Fas92mxkTKpu7jW8kOPaJ4p17
        RfHO70Vqp1yU4AggYY/goocUoKGsHFfi/TWHrNwXuZzIJUNW5kt4eZlKyH1fcnSYEsU7Rxx2CL/Yz+Qn
        jO91PIFSk8kUYDKZhDHvYyY/2iYI+UplWXYWwzCC1n++F3e9Cpfz9wAAAABJRU5ErkJggg==
</value>
  </data>
</root>